---
import EtherProvider from "../components/EtherProvider.astro";
import Layout from "../layouts/Layout.astro"

---

<Layout title="Claim | Degenerous">
    <main id="claim">
        <EtherProvider>            
            <Fragment slot="missing">
                You're missing metamask, please install it from <a href="https://metamask.io/download/">their website</a>
            </Fragment>
            <claim-page data-locked>                
                <h1>Claim Your Potential</h1>
                <div class="locked">
                    Please unlock your wallet
                </div>
                <div class="unlocked claim-container">                                        
                    <div class="claim-info">
                        <table>
                            <tr>
                                <td class="info-label">Total allocation:</td>
                                <td><span class="total">0</span></td>
                            </tr>
                            <tr>
                                <td>Claimed:</td>
                                <td><span class="claimed">0</span></td>
                            </tr>
                            <tr>
                                <td>Yet to be minted:</td>
                                <td><span class="available">0</span></td>
                            </tr>
                            <tr>
                                <td>Mint price:</td>
                                <td><span class="price">0</span> $USDC</td>
                            </tr>
                        </table>
                        <!-- Total allocation: <span class="total">0</span><br>
                        Claimed: <span class="claimed">0</span><br>
                        Yet to be minted: <span class="available">0</span><br>
                        Mint price: <span class="price">0</span> -->
                        <!-- <span class="claimed">0</span> claimed<br>
                        <span class="available">0</span> yet to be minted<br>
                        Price: <span class="price">0</span> -->
                        <div class="mint-form">
                            <input type="number" name="number" class="number claim-quantity" value="1"><br>
                            <button class="claim claim-btn" data-state="waiting">CLAIM</button>
                        </div>
                    </div>
                    <!-- <div>
                        <input type="number" name="number" class="number claim-quantity" value="1"><br>
                        <button class="claim claim-btn" data-state="waiting">CLAIM</button>
                    </div> -->
                </div>
                <div>
                    
                </div>
            </claim-page>
        </EtherProvider>
    </main>
</Layout>

<script>
    import { with_signer, get_data, approve_claim, claim } from "../lib/ether";

	class ClaimPage extends HTMLElement {
        #total:     Nullable<HTMLSpanElement>;
        #claimed:   Nullable<HTMLSpanElement>;
        #available: Nullable<HTMLSpanElement>;
        #price:     Nullable<HTMLSpanElement>;
        #number:    Nullable<HTMLInputElement>;
        #button:    Nullable<HTMLButtonElement>;

        async #set_data() {
            console.log(await get_data());
            const [claimed, available, price] = await get_data();

            if(this.#claimed === null || this.#available === null || this.#price === null) { 
                return; 
            }

            var total = claimed + available;

            this.#total.innerText = `${total}`;
            this.#claimed.innerText = `${claimed}`;
            this.#available.innerText = `${available}`;
            this.#price.innerText = `${price}`;
        }

        async #initialize() {
            await with_signer();
            await this.#set_data();
            delete this.dataset.locked;
        }

        async #button_handler() {
            if(this.#button === null) { return; }

            switch (this.#button.dataset.state) {
                case "waiting": case "claimed": {
                    this.#button.dataset.state = "pending";
                    await approve_claim();
                    this.#button.dataset.state = "approved";
                    this.#button.innerText = "mint";

                    break;
                }

                case "approved": {
                    if(this.#number === null) { return; }

                    this.#button.dataset.state = "pending";
                    await claim(parseInt(this.#number.value));
                    await this.#set_data();

                    this.#button.dataset.state = "claimed";
                    this.#button.innerText = "claimed";
                    break;
                }

                case "pending": {
                    console.error("Please wait for the transaction to finish!");
                    break;
                }

                default: {
                    return;
                }
            }
        }

		constructor() {
			super();

            this.#total =  document.querySelector(".total") as HTMLSpanElement;
            this.#claimed =  document.querySelector(".claimed") as HTMLSpanElement;
            this.#available =  document.querySelector(".available") as HTMLSpanElement;
            this.#price =  document.querySelector(".price") as HTMLSpanElement;
            this.#number =  document.querySelector(".number") as HTMLInputElement;
            this.#button =  document.querySelector(".claim") as HTMLButtonElement;

            if(this.#button === null) { return; }

            this.#button.addEventListener("click", () => this.#button_handler());
            this.#initialize();
		}
	}

	customElements.define('claim-page', ClaimPage);
</script>
<style lang="scss">
    [data-locked] :not(.locked) { display: none; }
    :not([data-locked]) .locked { display: none; }

    #claim {
        position: relative;
        min-height: 100vh;
        margin-bottom: -5rem;
        &:after {
            content: "";
            z-index: -1;
            position: absolute;
            top: 0;
            height: 100%;
            width: 100%;
            background: url("/images/Web-BG-2a-1.jpg") no-repeat center center;
            background-size: cover;
            background-attachment: fixed;
        }

        h1 {
            padding-top: 50px;
            font-size: 4rem;
            text-align: center;
            filter: drop-shadow(10px 10px 10px var(--bg-color));
            //text-shadow: 1px 1px 2px #d11af1, 0 0 1em #1422db, 0 0 0.2em #1422db;
        }

        .claim-container {
            // position: absolute;
            // z-index: 1;
            // top: 50%;
            // transform: translateY(-50%);
            left: 0;
            right: 0;
            margin-top: 80px;
            text-align: center;
        }

        .claim-info {
            position: relative;
            display: inline-block;
            width: 630px;            
            margin-bottom: 40px;
            padding: 40px;
            font-size: 20px;
            text-align: left;
            background: var(--bg-color-transparent);
            clip-path: var(--box-clip);

            .info-label {
                padding-right: 20px;
            }
        }

        .mint-form {
            position: absolute;
            right: 40px;
            bottom: 45px;
        }

        .claim-quantity {
            display: inline-block;
            width: 80px;
            margin-bottom: 15px;
            padding: 10px;
            padding-left: 20px;
            text-align: center;
            border: 0;
            border-top-left-radius: 0.375rem;
            border-bottom-right-radius: 0.375rem;
        }

        .claim-btn {            
            padding: 7px 50px;
            font-family: 'Righteous', cursive;
            font-size: 2rem;
            color: var(--accent-color);
            background-color: #fff;
            border: 0;
            border-radius: 0.375rem;
            cursor: pointer;
            transition: background 0.4s, color 0.4s, border-color 0.4s, box-shadow 0.4s;
            clip-path: var(--box-clip);
            &:hover {
                filter: brightness(.7);
            }
        }

        @media screen and (max-width: 50rem) {		
            .claim-container {
                margin-top: 40px;
            }
			.claim-info {
                max-width: 90%;
                padding: 20px;
                font-size: 18px;
                .mint-form {
                    position: static;
                    margin-top: 20px;
                }
            }
            .claim-btn {
                font-size: 1.5rem;
            }
		}	
    }
</style>