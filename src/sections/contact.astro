---
import Section from "../components/Section.astro";
---

<Section class="contact" id="contact">
	<div>
		<h1>Contact us</h1>
		<p>You can contact us here or tag us on our social media</p>
		<ul>
			<li>
				<a href="https://t.me/degenerous">
					<img src="/icons/telegram.svg" alt="Telegram">
					<strong>DEGENEROUS</strong> group chat
				</a>
			</li>
			<li>
				<a href="https://twitter.com/degenerousdao">
					<img src="/icons/twitter.svg" alt="Twitter">
					<strong>DEGENEROUS</strong> news
				</a>
			</li>
			<li>
				<a href="https://www.instagram.com/degenerousdao">
					<img src="/icons/instagram.svg" alt="Instagram">
					<strong>DEGENEROUS</strong> pictures
				</a>
			</li>
			<li>
				<a href="https://www.youtube.com/@degenerous">
					<img src="/icons/youtube.svg" alt="Youtube">
					<strong>DEGENEROUS</strong> videos
				</a>
			</li>
		</ul>
	</div>
	<form id="mail_form">
		<label for="name">Name</label>
		<input type="text" id="name" placeholder="John Doe" />

		<label for="email">E-mail</label>
		<input type="text" id="email" placeholder="john.doe@email.com" />

		<label for="subject">Subject</label>
		<input type="text" id="subject" placeholder="Bussines inquiry" />

		<label for="message">Message</label>
		<textarea rows="5" id="message" placeholder="Hi, friends,\n..." />
		<button type="submit">Send</button>
	</form>
</Section>

<script>
	const TOKEN = "bc9bde2f-36c3-4f82-afd2-f1f9a8a99a8f";
	const FROM = "info@degenerousdao.com";
	const TO = "msckwevctvwxprhmdz@tcwlx.com";

	declare namespace Email {
		interface EmailData {
			SecureToken: string;
			To: string | string[];
			From: string;
			Subject: string;
			Body: string;
		}

		function send(email: EmailData): Promise<string>;
	}

	const send = document.getElementById("mail_form")
	if (send instanceof HTMLElement) {
		send.onsubmit = async (e: SubmitEvent) => {
			e.preventDefault();

			try {
				const message = await Email.send({
					SecureToken : TOKEN,
					To : TO,
					From : FROM,
					Subject : "This is the subject",
					Body : "And this is the body"
				})

				alert(message);
			} catch (e) {
				alert("Error sendig message");
				console.error(e)
			}
		}	
	}
</script>

<style lang="scss">
	.contact {
		padding: 2rem;
		margin-top: 10rem;
		display: grid;
		place-content: center;
		grid-auto-flow: column;
		gap: 2rem;


		@media screen and (max-width: 65rem) {
			grid-auto-flow: row;
		}
	}

	ul {
		display: flex;
		gap: .5rem;
		flex-direction: column;
		padding: 2rem 1rem;
		grid-template-columns: repeat(3, auto);
		list-style: none;

		img {
			height: 2.5rem;
		}

		a {
			display: flex;
			gap: 1rem;
			align-items: center;
			color: var(--fg-color);
			text-decoration: none;

			&:hover {
				opacity: 0.7;
			}
		}
	}

	h1 {
		line-height: 1.1;
		padding-block: 3rem 0rem;
	}

	div, form {
		width: 30rem;
		max-width: calc(100vw - 2rem);
	}

	form {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
	}

	input, textarea {
		font-size: 1.2rem;
		outline: none;
		width: 100%;
		background: var(--bg-color);
		color: var(--fg-color);
		border: 2px solid hsl(0, 0%, 90%);
		padding: .5rem 1rem;
		margin-block: .3rem 1rem;
		border-radius: .3rem;

		&:hover {
			border: 2px solid hsl(0, 0%, 40%);
		}

		&:focus {
			border: 2px solid var(--card-border-color);
		}
	}


	button {
		all: unset;
		font-size: 1.2rem;
		align-self: flex-end;
		background-color: var(--accent-color);
		padding: .75rem 1.5rem;
		cursor: pointer;
		border-radius: .3rem;

		&:hover, &:focus {
			opacity: 0.7;
		}
	}
</style>