---
import Section from "@components/Section.astro";
---

<Section class="contact" id="contact">
	<div class="wrapper">
		<div class="socials">
			<h1>Contact us</h1>
			<p>You can contact us here or tag us on our social media</p>
			<ul>
				<li>
					<a href="http://telegram.dog/degenerous">
						<img src="/icons/telegram.svg" alt="Telegram">
						<strong>DEGENEROUS</strong> group chat
					</a>
				</li>
				<li>
					<a href="https://twitter.com/degenerousdao">
						<img src="/icons/twitter.svg" alt="Twitter">
						<strong>DEGENEROUS</strong> news
					</a>
				</li>
				<li>
					<a href="https://www.instagram.com/degenerousdao">
						<img src="/icons/instagram.svg" alt="Instagram">
						<strong>DEGENEROUS</strong> pictures
					</a>
				</li>
				<li>
					<a href="https://www.youtube.com/@degenerous">
						<img src="/icons/youtube.svg" alt="Youtube">
						<strong>DEGENEROUS</strong> videos
					</a>
				</li>
			</ul>
		</div>
		<form id="mail_form">
			<label for="name">Name</label>
			<input required type="text" id="name" placeholder="John Doe" />

			<label for="email">E-mail</label>
			<input required type="text" id="email" placeholder="john.doe@email.com" />

			<label for="subject">Subject</label>
			<input required type="text" id="subject" placeholder="Bussines inquiry" />

			<label for="message">Message</label>
			<textarea required rows="5" id="message" placeholder="Hi, friends,\n..." />
			<button type="submit">Send</button>
		</form>
	</div>
</Section>

<script>
    const TOKEN = "5770bbc8-8e2b-4cc0-a31c-6107e2330a23";
    const FROM = "website@degenerousdao.com";
    const TO = "degenerousdao@gmail.com";

    declare namespace Email {
        interface EmailData {
            SecureToken: string;
            To: string | string[];
            From: string;
            Subject: string;
            Body: string;
        }

        function send(email: EmailData): Promise<string>;
    }

    const send = document.getElementById("mail_form")
    if (send instanceof HTMLElement) {
        send.onsubmit = async (e: SubmitEvent) => {
            e.preventDefault();

            try {
                const name = (document.getElementById("name") as HTMLInputElement).value;
                const email = (document.getElementById("email") as HTMLInputElement).value;
                const subject = (document.getElementById("subject") as HTMLInputElement).value;
                const message = (document.getElementById("message") as HTMLInputElement).value;

                console.log(`From: ${name} &lt;${email}&gt;` + "\n" + message);

                const response = await Email.send({
                    SecureToken : TOKEN,
                    To : TO,
                    From : FROM,
                    Subject : subject,
                    Body : `From: ${name} &lt;${email}&gt;<br><br>Message: <br>${message.replaceAll("\n", "<br>")}`,
                });

				if (response === "OK") {
					alert("Email sent!");
				} else {
					alert("Error sendig message");
					console.error(response)
				}

            } catch (e) {
                alert("Error sendig message");
                console.error(e)
            }
        }    
    }
</script>

<style lang="scss">
	.wrapper {
		padding: 2rem;
		margin-top: 5rem;
		display: grid;
		place-content: center;
		grid-auto-flow: column;
		gap: 2rem;

		@media screen and (max-width: 65rem) {
			grid-auto-flow: row;
		}
	}

	ul {
		display: flex;
		gap: .5rem;
		flex-direction: column;
		padding: 2rem 1rem;
		grid-template-columns: repeat(3, auto);
		list-style: none;

		img {
			height: 2.5rem;
		}

		a {
			display: flex;
			gap: 1rem;
			align-items: center;
			color: var(--fg-color);
			text-decoration: none;

			&:hover {
				opacity: 0.7;
			}
		}
	}

	h1 {
		line-height: 1.1;
		padding-block: 3rem 0rem;
	}

	.socials, form {
		width: 30rem;
		max-width: calc(100vw - 2rem);
	}

	form {
		display: flex;
		flex-direction: column;
		align-items: flex-start;
	}

	input, textarea {
		font-size: 1.2rem;
		outline: none;
		width: 100%;
		background: hsl(var(--bg-color));
		color: var(--fg-color);
		border: 2px solid hsl(0, 0%, 90%);
		padding: .5rem 1rem;
		margin-block: .3rem 1rem;
		border-radius: .3rem;

		&:hover {
			border: 2px solid hsl(0, 0%, 40%);
		}

		&:focus {
			border: 2px solid var(--card-border-color);
		}
	}


	button {
	// 	all: unset;
		font-size: 1.2rem;
		align-self: flex-end;
		background-color: var(--accent-color);
		color: var(--fg-color);
		// padding: .75rem 1.5rem;
	// 	cursor: pointer;
	// 	border-radius: .3rem;

	// 	&:hover, &:focus {
	// 		opacity: 0.7;
	// 	}
	}
</style>
